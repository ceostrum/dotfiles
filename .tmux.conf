# set prefix to tilde
set -g prefix `                   # use tilde key as prefix
bind ` send-prefix
unbind C-b

# window movements
bind ,     previous-window
bind .     next-window
bind <     swap-window -t :-
bind >     swap-window -t :+
bind |     split-window -h -c '#{pane_current_path}'        # split into left and right panes
bind '\'     split-window -h -c '#{pane_current_path}'
bind -     split-window -v -c '#{pane_current_path}'        # split into top and bottom panes
bind c     new-window -c '#{pane_current_path}'
bind o     rotate-window          # rotate panes around in current window
bind Left  resize-pane -L 5
bind Right resize-pane -R 5
bind Up    resize-pane -U 5
bind Down  resize-pane -D 5
bind m     resize-pane -Z
bind v     select-layout even-horizontal
bind V     select-layout main-vertical
bind h     select-layout even-vertical
bind H     select-layout main-horizontal
bind t     select-layout tiled
bind n     command-prompt 'rename-window %%'
bind N     command-prompt 'rename-session %%'
bind x     kill-pane
bind X     kill-window
bind r     source-file ~/.tmux.conf \; display-message " * reloaded ~/.tmux.conf"

bind j     select-pane -D
bind k     select-pane -U
bind h     select-pane -L
bind l     select-pane -R

bind -n C-k clear-history
bind M command-prompt -p "man page:" "split-window -h 'exec man %%'"

# C-c: save into system clipboard (+). With preselection.
bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-v: copy from + clipboard.
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

# C-d: save into selection clipboard (*). With preselection.
bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-f: copy from * clipboard.
bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

# behavior
set  -g base-index 1          # start window numbering from 1 instead of 0
#setw -g automatic-rename on   # automatically name windows
set  -g set-titles on         # auto set the terminal's window title
set  -g history-limit 100000

# appearance
set -g default-terminal "screen-256color"      # full colors for apps
set -g status-bg black
set -g status-fg white

## left side of status bar
set -g status-left-length 20
set -g status-left '#[bg=black,fg=yellow][#[bg=black,fg=cyan]#S#[bg=black,fg=yellow]]-'

## middle of status bar, window labels
# Inactive windows in status bar
set-window-option -g window-status-format '#[fg=cyan,dim]#I#[fg=blue]:#[default]#W#[fg=grey,dim]#F'
# Current or active window in status bar
# set-window-option -g window-status-current-format '#[bg=white,fg=blue,bold]#I#[bg=blue,fg=cyan]:#[fg=white]#W#[fg=dim]#F'
set-window-option -g window-status-current-format '#[default]#I#[bg=blue,fg=cyan]:#[fg=white]#W#[fg=dim]#F'

## right side of status bar
# show current window title, date and time
set -g status-right '#[fg=green][#[fg=white]#T#[fg=green]][#[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]#[fg=green]]'

#----------------------------------
#       Vim integration
#----------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#---------------------------------
# tmux plugins
#---------------------------------
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-urlview'

#---------------------------------
# resurrect settings
#---------------------------------
set -g @resurrect-capture-pane-contents 'on'

# Resurrect neovim sessions
set -g @resurrect-strategy-nvim 'session'

# Run the plugin manager, should be the last line of the tmux.conf
run '~/.tmux/plugins/tpm/tpm'
